Given a string s, find the length of the longest substring without duplicate characters.

 

Example 1:

Input: s = "abcabcbb"
Output: 3
Explanation: The answer is "abc", with the length of 3.
Example 2:

Input: s = "bbbbb"
Output: 1
Explanation: The answer is "b", with the length of 1.
Example 3:

Input: s = "pwwkew"
Output: 3
Explanation: The answer is "wke", with the length of 3.
Notice that the answer must be a substring, "pwke" is a subsequence and not a substring.


class Solution(object):
    def lengthOfLongestSubstring(self,s):
        left=0
        max_len=0
        last_seen={}
        for right ,ch in enumerate(s):
            if ch in last_seen and last_seen[ch]>=left:
                left=last_seen[ch]+1
            last_seen[ch]=right
            max_len=max(max_len,right-left+1)
        return max_len
